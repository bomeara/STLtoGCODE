% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stg.R
\name{stl_generate_gcode}
\alias{stl_generate_gcode}
\title{Creates the GCODE for a regularized loaded stl object}
\usage{
stl_generate_gcode(
  stl,
  gcode_file = "gcode.nc",
  spin_speed = 12000,
  horizontal_speed = 30,
  vertical_speed = 9,
  stepover_height = 0.2,
  stepdown_depth = 0.02,
  unit = "inches",
  unit_precision = 5,
  verbose = TRUE
)
}
\arguments{
\item{stl}{object from stl_load(), ideally after running through stl_regularize}

\item{gcode_file}{path to use to store gcode output}

\item{spin_speed}{how fast to rotate the spindle}

\item{horizontal_speed}{how fast to move the spindle when cutting horizontally}

\item{vertical_speed}{how fast to move the spindle when moving down or up}

\item{stepover_height}{how high to move the spindle over an obstacle}

\item{stepdown_depth}{how much lower to move the spindle each pass}

\item{unit}{"inches" or "mm"}

\item{unit_precision}{how many digits to use after the decimal point}

\item{verbose}{if TRUE, print details}
}
\description{
The defaults work for my machine (a MySweety 3018) but you should check this for yours. You can look at the final code; the site https://www.cnccookbook.com/g-code-m-code-reference-list-cnc-mills/ will explain what codes mean. The important things to check are the three speeds, the units you want to use, and the stepover_height. spin_speed is how quickly to rotate the spindle. horizontal_speed is how quickly to move left and right and forward and back while cutting through material: too fast and it might be too hard for your machine (or snap your bit), too slow and the run takes longer. Vertical is the same but for moving into and out of the material. stepover_height is how much clearance to leave above obstacles -- make sure your spindle can go up at least this much above its starting position. stepdown_depth is how much lower to go into the material each pass.
}
\details{
Remember, this code is not guaranteed to work! And it is code telling an expensive robot how to move very quickly moving bits of metal across resisting surfaces. If it goes wrong, it can go VERY wrong: damaging your machine, damaging the materials, setting things on fire, hurting people. Use at your own risk, and I strongly suggesting seeking out better options (like FreeCAD) if they are available to you. The settings seem to work for my machine, but they could be too fast or slow for yours, make sure you don't try to engrave something too large, etc. You can run your code at https://nraynaud.github.io/webgcode/ to see what it will look like and how long it will take.

The algorithm I use here is very basic -- essentially moving back and forth like a farmer plowing their field. There are far more clever algorithms like spiraling, climbing cuts, etc. This also does not focus on the tool size: basically, it moves the bottom tip of the tool back and forth along each line specified in the object, moving a little bit downward each time.
}
\examples{
cat_paw <- stl_load("~/Downloads/catsnowscaled.stl")
cat_paw_reg <- stl_regularize(cat_paw)
stl_generate_gcode(cat_paw_reg, gcode_file="~/Downloads/cat.nc")
}
